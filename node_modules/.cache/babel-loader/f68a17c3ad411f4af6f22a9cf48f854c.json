{"ast":null,"code":"import _slicedToArray from \"/Users/keremmican/Downloads/argon-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\n// reactstrap components\nimport { Button, Card, CardBody, FormGroup, Form, Input, Container, Row, Col } from \"reactstrap\"; // core components\n\nimport RegisterHeader from \"components/Headers/RegisterHeader.js\";\nimport React from \"react\";\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SIGNUP_URL = \"http://localhost:8080/sign-up\";\n\nvar RegisterUser = function RegisterUser() {\n  _s();\n\n  /*const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState('');\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  const [identitynumber, setIdentityNumber] = useState('');\n  const [salart, setSalary] = useState('');\n  const [title, setTitle] = useState('');*/\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      level = _useState2[0],\n      setLevel = _useState2[1];\n  /*const handleSubmit = async (e) => {\n    e.preventDefault();\n      try {\n        let signuprequest = JSON.stringify({\n            email: user, \n            password: pwd});\n         const response = axios.post(SIGNUP_URL, signuprequest, {\n            headers: { 'Content-Type': 'application/json' },\n        });\n         let data;\n        await response.then(result => {\n            return data = result.data;\n        });\n        \n        setRole(data['value']['roleName']);\n        setToken(data['value']['token']);\n        setLayoutName(\"/\"+data['value']['roleName']);\n        setSuccess(true);\n      } catch (err) {\n        if (!err?.response) {\n            setErrMsg('Server hatası');\n        } else if (err.response?.status === 400) {\n            setErrMsg('E-posta ya da şifre yanlış!');\n        } else if (err.response?.status === 401) {\n            setErrMsg('Onaylanmamış hesap');\n        } else {\n            setErrMsg('Giriş işlemi başarısız');\n        }\n     }\n    }*/\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(RegisterUser, \"stbRfEIrZEsfX+jgxbKXy6iO5q8=\");\n\n_c = RegisterUser;\nexport default RegisterUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterUser\");","map":{"version":3,"names":["Button","Card","CardBody","FormGroup","Form","Input","Container","Row","Col","RegisterHeader","React","useRef","useState","useEffect","useContext","SIGNUP_URL","RegisterUser","level","setLevel"],"sources":["/Users/keremmican/Downloads/argon-dashboard-react-master/src/views/examples/RegisterUser.js"],"sourcesContent":["// reactstrap components\nimport {\n    Button,\n    Card,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n  } from \"reactstrap\";\n  // core components\nimport RegisterHeader from \"components/Headers/RegisterHeader.js\";\nimport React from \"react\";\nimport { useRef, useState, useEffect, useContext } from 'react';\n\nconst SIGNUP_URL = \"http://localhost:8080/sign-up\";\n  \nconst RegisterUser = () => {\n\n  /*const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState('');\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  const [identitynumber, setIdentityNumber] = useState('');\n  const [salart, setSalary] = useState('');\n  const [title, setTitle] = useState('');*/\n  const [level, setLevel] = useState('');\n\n  /*const handleSubmit = async (e) => {\n    e.preventDefault();\n\n     try {\n        let signuprequest = JSON.stringify({\n            email: user, \n            password: pwd});\n\n        const response = axios.post(SIGNUP_URL, signuprequest, {\n            headers: { 'Content-Type': 'application/json' },\n        });\n\n        let data;\n        await response.then(result => {\n            return data = result.data;\n        });\n        \n        setRole(data['value']['roleName']);\n        setToken(data['value']['token']);\n        setLayoutName(\"/\"+data['value']['roleName']);\n        setSuccess(true);\n\n     } catch (err) {\n        if (!err?.response) {\n            setErrMsg('Server hatası');\n        } else if (err.response?.status === 400) {\n            setErrMsg('E-posta ya da şifre yanlış!');\n        } else if (err.response?.status === 401) {\n            setErrMsg('Onaylanmamış hesap');\n        } else {\n            setErrMsg('Giriş işlemi başarısız');\n        }\n     }\n    }*/\n\n    return (\n      <>\n      \n      </>\n    );\n  };\n  \n  export default RegisterUser;\n  "],"mappings":";;;;AAAA;AACA,SACIA,MADJ,EAEIC,IAFJ,EAGIC,QAHJ,EAIIC,SAJJ,EAKIC,IALJ,EAMIC,KANJ,EAOIC,SAPJ,EAQIC,GARJ,EASIC,GATJ,QAUS,YAVT,C,CAWE;;AACF,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,UAAtC,QAAwD,OAAxD;;;AAEA,IAAMC,UAAU,GAAG,+BAAnB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;EAAA;;EAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,gBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAMI,oBACE,qCADF;AAKD,CApDH;;GAAMF,Y;;KAAAA,Y;AAsDJ,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}