import React from 'react';
import { ButtonProps } from '../../components/Button';
import { DayEventHandlers } from '../../hooks/useDayEventHandlers';
import { SelectedDays } from '../../hooks/useSelectedDays';
import { ActiveModifiers } from '../../types/Modifiers';
import { StyledComponent } from '../../types/Styles';
export declare type DayRender = {
    /** Whether the day should be rendered a `button` instead of a `div` */
    isButton: boolean;
    /** Whether the day should be hidden. */
    isHidden: boolean;
    /** The modifiers active for the given day. */
    activeModifiers: ActiveModifiers;
    /** The props to apply to the button element (when `isButton` is true). */
    buttonProps: StyledComponent & Pick<ButtonProps, 'disabled' | 'aria-pressed' | 'tabIndex'> & DayEventHandlers;
    /** The props to apply to the div element (when `isButton` is false). */
    divProps: StyledComponent;
    selectedDays: SelectedDays;
};
/**
 * Return props and data used to render the {@link Day} component.
 *
 * Use this hook when creating a component to replace the built-in `Day`
 * component.
 */
export declare function useDayRender(
/** The date to render. */
day: Date, 
/** The month where the date is displayed (if not the same as `date`, it means it is an "outside" day). */
displayMonth: Date, 
/** A ref to the button element that will be target of focus when rendered (if required). */
buttonRef: React.RefObject<HTMLButtonElement>): DayRender;
